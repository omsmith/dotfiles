# display current hg branch
function hg_status {
	command -v hg >/dev/null 2>&1 && local result=`hg branch 2>/dev/null`
	if [ -n "$result" ]; then
		echo -n "$YELLOW |$BLUE hg $CYAN$result"
		return 0
	fi

	return 1
}

# display current git branch
function git_status {
	command -v git >/dev/null 2>&1 && local result=`git symbolic-ref HEAD 2>/dev/null`
	if [ -n "$result" ]; then
		result=`basename $result 2>/dev/null`
		echo -n "$YELLOW |$BLUE git $CYAN$result"
		return 0
	fi

	return 1
}

# display vcs status
function vcs_status {
	hg_status
	git_status
}

function prompt {
	local BLACK="\[\033[0;30m\]"
	local BLACKBOLD="\[\033[1;30m\]"
	local RED="\[\033[0;31m\]"
	local REDBOLD="\[\033[1;31m\]"
	local GREEN="\[\033[0;32m\]"
	local GREENBOLD="\[\033[1;32m\]"
	local YELLOW="\[\033[0;33m\]"
	local YELLOWBOLD="\[\033[1;33m\]"
	local BLUE="\[\033[0;34m\]"
	local BLUEBOLD="\[\033[1;34m\]"
	local PURPLE="\[\033[0;35m\]"
	local PURPLEBOLD="\[\033[1;35m\]"
	local CYAN="\[\033[0;36m\]"
	local CYANBOLD="\[\033[1;36m\]"
	local WHITE="\[\033[0;37m\]"
	local WHITEBOLD="\[\033[1;37m\]"

	PS1="$PURPLE\u $CYAN\H $YELLOW| $RED\d$WHITE at $RED\t"
	PS1=$PS1$( vcs_status )
	PS1=$PS1"\n$YELLOW$( pwd ) ~"
	PS1=$PS1" "
	PS1=$PS1$WHITE
}

PROMPT_COMMAND=prompt
